openapi: 3.0.3
info:
  title: AI2Text API Gateway
  version: 1.0.0
  description: |
    Single entry point for all AI2Text services.
    Provides authentication, rate limiting, and request routing.

servers:
  - url: https://api.ai2text.com/v1
    description: Production server
  - url: http://localhost:8080/v1
    description: Development server

paths:
  /health:
    get:
      summary: Health check
      operationId: healthCheck
      tags:
        - health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /ingest:
    post:
      summary: Upload audio file for processing
      operationId: ingestAudio
      tags:
        - ingestion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                language:
                  type: string
                  enum: [vi, en]
                  default: vi
      responses:
        '200':
          description: Upload successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /search:
    get:
      summary: Semantic search over transcripts
      operationId: searchTranscripts
      tags:
        - search
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: threshold
          in: query
          schema:
            type: number
            format: float
            minimum: 0
            maximum: 1
            default: 0.7
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /metadata/{recording_id}:
    get:
      summary: Get recording metadata
      operationId: getMetadata
      tags:
        - metadata
      security:
        - bearerAuth: []
      parameters:
        - name: recording_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metadata retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time

    IngestResponse:
      type: object
      required:
        - recording_id
        - status
      properties:
        recording_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [accepted, processing, completed]
        message:
          type: string

    SearchResponse:
      type: object
      required:
        - hits
        - total
      properties:
        hits:
          type: array
          items:
            $ref: '#/components/schemas/SearchHit'
        total:
          type: integer
          minimum: 0

    SearchHit:
      type: object
      required:
        - id
        - score
        - text
      properties:
        id:
          type: string
          format: uuid
        score:
          type: number
          format: float
          minimum: 0
          maximum: 1
        text:
          type: string
        recording_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time

    MetadataResponse:
      type: object
      required:
        - recording_id
        - status
      properties:
        recording_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [uploaded, transcribing, transcribed, processing, completed]
        audio_url:
          type: string
          format: uri
        transcript:
          type: string
          nullable: true
        language:
          type: string
          enum: [vi, en]
        duration_sec:
          type: number
          format: float
        created_at:
          type: string
          format: date-time

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: integer


